<?xml version="1.0" encoding="UTF-8"?>

<CodeSystem xmlns="http://hl7.org/fhir">
  <id value="cap-codes"/>
  <text>
    <status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml"><h2>CapabilityCodes</h2><div><p>Codes describing <em>optional</em> SMART features</p>
</div><p>This code system http://hl7.org/fhir/smart-app-launch/CodeSystem/cap-codes defines the following codes:</p><table class="codes"><tr><td style="white-space:nowrap"><b>Code</b></td><td><b>Display</b></td><td><b>Definition</b></td></tr><tr><td style="white-space:nowrap">launch-ehr<a name="cap-codes-launch-ehr"> </a></td><td>Launch Ehr</td><td>support for SMART's EHR Launch mode</td></tr><tr><td style="white-space:nowrap">launch-standalone<a name="cap-codes-launch-standalone"> </a></td><td>Launch Standalone</td><td>support for SMART's Standalone Launch mode</td></tr><tr><td style="white-space:nowrap">client-public<a name="cap-codes-client-public"> </a></td><td>Client Public</td><td>support for SMART's public client profile (no client authentication)</td></tr><tr><td style="white-space:nowrap">client-confidential-symmetric<a name="cap-codes-client-confidential-symmetric"> </a></td><td>Client Confidential Symmetric</td><td>support for SMART's confidential client profile (symmetric client secret authentication)</td></tr><tr><td style="white-space:nowrap">sso-openid-connect<a name="cap-codes-sso-openid-connect"> </a></td><td>Sso Openid Connect</td><td>support for SMART's OpenID Connect profile</td></tr><tr><td style="white-space:nowrap">context-banner<a name="cap-codes-context-banner"> </a></td><td>Context Banner</td><td>support for &quot;need patient banner&quot; launch context (conveyed via `need_patient_banner` token paramete</td></tr><tr><td style="white-space:nowrap">context-style<a name="cap-codes-context-style"> </a></td><td>Context Style</td><td>support for &quot;SMART style URL&quot; launch context (conveyed via `smart_style_url` token parameter)</td></tr><tr><td style="white-space:nowrap">context-ehr-patient<a name="cap-codes-context-ehr-patient"> </a></td><td>Context Ehr Patient</td><td>support for patient-level launch context (requested by `launch/patient` scope, conveyed via `patient` token parameter)</td></tr><tr><td style="white-space:nowrap">context-ehr-encounter<a name="cap-codes-context-ehr-encounter"> </a></td><td>Context Ehr Encounter</td><td>support for encounter-level launch context (requested by `launch/encounter` scope, conveyed via `encounter` token parameter)</td></tr><tr><td style="white-space:nowrap">context-standalone-patient<a name="cap-codes-context-standalone-patient"> </a></td><td>Context Standalone Patient</td><td>support for patient-level launch context (requested by `launch/patient` scope, conveyed via `patient` token parameter)</td></tr><tr><td style="white-space:nowrap">context-standalone-encounter<a name="cap-codes-context-standalone-encounter"> </a></td><td>Context Standalone Encounter</td><td>support for encounter-level launch context (requested by `launch/encounter` scope, conveyed via `encounter` token parameter)</td></tr><tr><td style="white-space:nowrap">permission-offline<a name="cap-codes-permission-offline"> </a></td><td>Permission Offline</td><td>support for refresh tokens (requested by `offline_access` scope)</td></tr><tr><td style="white-space:nowrap">permission-patient<a name="cap-codes-permission-patient"> </a></td><td>Permission Patient</td><td>support for patient-level scopes (e.g. `patient/Observation.read`)</td></tr><tr><td style="white-space:nowrap">permission-user<a name="cap-codes-permission-user"> </a></td><td>Permission User</td><td>support for user-level scopes (e.g. `user/Appointment.read`)</td></tr></table></div>
  </text>
  <url value="http://hl7.org/fhir/smart-app-launch/CodeSystem/cap-codes"/>
  <version value="1.0.0"/>
  <name value="CapabilityCodes"/>
  <status value="draft"/>
  <experimental value="false"/>
  <date value="2018-07-09T16:23:02-07:00"/>
  <contact>
    <telecom>
      <system value="url"/>
    </telecom>
    <telecom>
      <system value="email"/>
    </telecom>
  </contact>
  <description value="Codes describing *optional* SMART features"/>
  <caseSensitive value="true"/>
  <valueSet value="http://hl7.org/fhir/smart-app-launch/ValueSet/cap-codes"/>
  <content value="complete"/>
  <concept>
    <code value="launch-ehr"/>
    <display value="Launch Ehr"/>
    <definition value="support for SMART&#39;s EHR Launch mode"/>
  </concept>
  <concept>
    <code value="launch-standalone"/>
    <display value="Launch Standalone"/>
    <definition value="support for SMART&#39;s Standalone Launch mode"/>
  </concept>
  <concept>
    <code value="client-public"/>
    <display value="Client Public"/>
    <definition value="support for SMART&#39;s public client profile (no client authentication)"/>
  </concept>
  <concept>
    <code value="client-confidential-symmetric"/>
    <display value="Client Confidential Symmetric"/>
    <definition value="support for SMART&#39;s confidential client profile (symmetric client secret authentication)"/>
  </concept>
  <concept>
    <code value="sso-openid-connect"/>
    <display value="Sso Openid Connect"/>
    <definition value="support for SMART&#39;s OpenID Connect profile"/>
  </concept>
  <concept>
    <code value="context-banner"/>
    <display value="Context Banner"/>
    <definition value="support for &quot;need patient banner&quot; launch context (conveyed via `need_patient_banner` token paramete"/>
  </concept>
  <concept>
    <code value="context-style"/>
    <display value="Context Style"/>
    <definition value="support for &quot;SMART style URL&quot; launch context (conveyed via `smart_style_url` token parameter)"/>
  </concept>
  <concept>
    <code value="context-ehr-patient"/>
    <display value="Context Ehr Patient"/>
    <definition value="support for patient-level launch context (requested by `launch/patient` scope, conveyed via `patient` token parameter)"/>
  </concept>
  <concept>
    <code value="context-ehr-encounter"/>
    <display value="Context Ehr Encounter"/>
    <definition value="support for encounter-level launch context (requested by `launch/encounter` scope, conveyed via `encounter` token parameter)"/>
  </concept>
  <concept>
    <code value="context-standalone-patient"/>
    <display value="Context Standalone Patient"/>
    <definition value="support for patient-level launch context (requested by `launch/patient` scope, conveyed via `patient` token parameter)"/>
  </concept>
  <concept>
    <code value="context-standalone-encounter"/>
    <display value="Context Standalone Encounter"/>
    <definition value="support for encounter-level launch context (requested by `launch/encounter` scope, conveyed via `encounter` token parameter)"/>
  </concept>
  <concept>
    <code value="permission-offline"/>
    <display value="Permission Offline"/>
    <definition value="support for refresh tokens (requested by `offline_access` scope)"/>
  </concept>
  <concept>
    <code value="permission-patient"/>
    <display value="Permission Patient"/>
    <definition value="support for patient-level scopes (e.g. `patient/Observation.read`)"/>
  </concept>
  <concept>
    <code value="permission-user"/>
    <display value="Permission User"/>
    <definition value="support for user-level scopes (e.g. `user/Appointment.read`)"/>
  </concept>
</CodeSystem>